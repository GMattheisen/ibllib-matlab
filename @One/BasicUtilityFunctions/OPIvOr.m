% =========================================================
% Find Original Paths for IvOr
%
function original_path = OPIvOr(dataset_type, original_paths, user, m)

file_conversion = containers.Map({'_mflab_lickPiezoLeft.times',...
'_mflab_lickPiezoRight.times',...
'_mflab_valveLineLeft.times',...
'_mflab_valveLineRight.times',...
'_mflab_stimLineCues.times',...
'_mflab_stimLineBaseline.times',...
'_mflab_stimLineChange.times',...
'_mflab_valveLinePuff.times',...
'_mflab_framePulse.times',...
'_mflab_driverLineLEDON.times',...
'_mflab_driverLineCAM.times',...
'_mflab_photodiode.times',...
'_mflab_driverLineLED1.times',...
'_mflab_driverLineLED2.times',...
'_mflab_running.times',...
'_mflab_clocks.times',...
'_mflab_videographyFace.frames',...
'_mflab_videographyEye.frames',...
'_mflab_videographyBody.frames',...
'_mflab_lickPiezoLeft.raw',...
'_mflab_lickPiezoRight.raw',...
'_mflab_valveLineLeft.raw',...
'_mflab_valveLineRight.raw',...
'_mflab_stimLineCues.raw',...
'_mflab_stimLineBaseline.raw',...
'_mflab_stimLineChange.raw',...
'_mflab_valveLinePuff.raw',...
'_mflab_framePulse.raw',...
'_mflab_driverLineLEDON.raw',...
'_mflab_driverLineCAM.raw',...
'_mflab_photodiode.raw',...
'_mflab_driverLineLED1.raw',...
'_mflab_driverLineLED2.raw',...
'_mflab_running.raw',...
'_mflab_clocks.raw',...
},...
{'achn0',...
'achn1',...
'achn2',...
'achn3',...
'achn4',...
'achn5',...
'achn6',...
'achn7',...
'achn8',...
'achn9',...
'achn10',...
'achn11',...
'achn12',...
'achn13',...
'xraw',...
'_ts',...
'FaceCam',...
'EyeCam',...
'BodyCam'...
'achn0',...
'achn1',...
'achn2',...
'achn3',...
'achn4',...
'achn5',...
'achn6',...
'achn7',...
'achn8',...
'achn9',...
'achn10',...
'achn11',...
'achn12',...
'achn13',...
'xraw',...
'_ts',...
});

    for k = 1:length(original_paths)
        if dataset_type == "_mflab_experimentSettings.raw"
            str_to = original_paths(k);
            split_str = strsplit(str_to{1}, "/");
            end_val = split_str{end};
            expression = '[A-Z]+_[0-9]+_s[0-9]+_[0-9]+_[0-9]+.mat';
            if regexp(end_val, expression) == 1
                path = original_paths(k);
            end
        elseif contains(original_paths(k), file_conversion(dataset_type)) 
            path = original_paths(k);
        end
    end  
split_str = strsplit(path{1}, "/");
str_wo_mount = strjoin(split_str([4:end]),"/");
original_path = "/mnt/" + user + "/" + str_wo_mount;
end 